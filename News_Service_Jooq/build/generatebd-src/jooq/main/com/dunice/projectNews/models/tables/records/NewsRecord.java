/*
 * This file is generated by jOOQ.
 */
package com.dunice.projectNews.models.tables.records;


import com.dunice.projectNews.models.tables.News;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewsRecord extends UpdatableRecordImpl<NewsRecord> implements Record5<Long, String, String, String, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>news_schema.news.news_id</code>.
     */
    public NewsRecord setNewsId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.news.news_id</code>.
     */
    public Long getNewsId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>news_schema.news.description</code>.
     */
    public NewsRecord setDescription(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.news.description</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>news_schema.news.image</code>.
     */
    public NewsRecord setImage(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.news.image</code>.
     */
    public String getImage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>news_schema.news.title</code>.
     */
    public NewsRecord setTitle(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.news.title</code>.
     */
    public String getTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>news_schema.news.users_id</code>.
     */
    public NewsRecord setUsersId(UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.news.users_id</code>.
     */
    public UUID getUsersId() {
        return (UUID) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, UUID> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, UUID> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return News.NEWS.NEWS_ID;
    }

    @Override
    public Field<String> field2() {
        return News.NEWS.DESCRIPTION;
    }

    @Override
    public Field<String> field3() {
        return News.NEWS.IMAGE;
    }

    @Override
    public Field<String> field4() {
        return News.NEWS.TITLE;
    }

    @Override
    public Field<UUID> field5() {
        return News.NEWS.USERS_ID;
    }

    @Override
    public Long component1() {
        return getNewsId();
    }

    @Override
    public String component2() {
        return getDescription();
    }

    @Override
    public String component3() {
        return getImage();
    }

    @Override
    public String component4() {
        return getTitle();
    }

    @Override
    public UUID component5() {
        return getUsersId();
    }

    @Override
    public Long value1() {
        return getNewsId();
    }

    @Override
    public String value2() {
        return getDescription();
    }

    @Override
    public String value3() {
        return getImage();
    }

    @Override
    public String value4() {
        return getTitle();
    }

    @Override
    public UUID value5() {
        return getUsersId();
    }

    @Override
    public NewsRecord value1(Long value) {
        setNewsId(value);
        return this;
    }

    @Override
    public NewsRecord value2(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public NewsRecord value3(String value) {
        setImage(value);
        return this;
    }

    @Override
    public NewsRecord value4(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public NewsRecord value5(UUID value) {
        setUsersId(value);
        return this;
    }

    @Override
    public NewsRecord values(Long value1, String value2, String value3, String value4, UUID value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NewsRecord
     */
    public NewsRecord() {
        super(News.NEWS);
    }

    /**
     * Create a detached, initialised NewsRecord
     */
    public NewsRecord(Long newsId, String description, String image, String title, UUID usersId) {
        super(News.NEWS);

        setNewsId(newsId);
        setDescription(description);
        setImage(image);
        setTitle(title);
        setUsersId(usersId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised NewsRecord
     */
    public NewsRecord(com.dunice.projectNews.models.tables.pojos.News value) {
        super(News.NEWS);

        if (value != null) {
            setNewsId(value.getNewsId());
            setDescription(value.getDescription());
            setImage(value.getImage());
            setTitle(value.getTitle());
            setUsersId(value.getUsersId());
            resetChangedOnNotNull();
        }
    }
}
