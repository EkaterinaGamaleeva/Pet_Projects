/*
 * This file is generated by jOOQ.
 */
package com.dunice.projectNews.models.tables.records;


import com.dunice.projectNews.models.tables.Users;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record6<UUID, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>news_schema.users.users_id</code>.
     */
    public UsersRecord setUsersId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.users.users_id</code>.
     */
    public UUID getUsersId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>news_schema.users.avatar</code>.
     */
    public UsersRecord setAvatar(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.users.avatar</code>.
     */
    public String getAvatar() {
        return (String) get(1);
    }

    /**
     * Setter for <code>news_schema.users.email</code>.
     */
    public UsersRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.users.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>news_schema.users.name</code>.
     */
    public UsersRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.users.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>news_schema.users.role</code>.
     */
    public UsersRecord setRole(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.users.role</code>.
     */
    public String getRole() {
        return (String) get(4);
    }

    /**
     * Setter for <code>news_schema.users.password</code>.
     */
    public UsersRecord setPassword(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.users.password</code>.
     */
    public String getPassword() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UUID, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Users.USERS.USERS_ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.AVATAR;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.NAME;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.ROLE;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public UUID component1() {
        return getUsersId();
    }

    @Override
    public String component2() {
        return getAvatar();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getRole();
    }

    @Override
    public String component6() {
        return getPassword();
    }

    @Override
    public UUID value1() {
        return getUsersId();
    }

    @Override
    public String value2() {
        return getAvatar();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getRole();
    }

    @Override
    public String value6() {
        return getPassword();
    }

    @Override
    public UsersRecord value1(UUID value) {
        setUsersId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setAvatar(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord values(UUID value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(UUID usersId, String avatar, String email, String name, String role, String password) {
        super(Users.USERS);

        setUsersId(usersId);
        setAvatar(avatar);
        setEmail(email);
        setName(name);
        setRole(role);
        setPassword(password);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(com.dunice.projectNews.models.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setUsersId(value.getUsersId());
            setAvatar(value.getAvatar());
            setEmail(value.getEmail());
            setName(value.getName());
            setRole(value.getRole());
            setPassword(value.getPassword());
            resetChangedOnNotNull();
        }
    }
}
