/*
 * This file is generated by jOOQ.
 */
package com.dunice.projectNews.models;


import com.dunice.projectNews.models.tables.News;
import com.dunice.projectNews.models.tables.NewsTags;
import com.dunice.projectNews.models.tables.RequestLogs;
import com.dunice.projectNews.models.tables.Tags;
import com.dunice.projectNews.models.tables.Users;
import com.dunice.projectNews.models.tables.records.NewsRecord;
import com.dunice.projectNews.models.tables.records.NewsTagsRecord;
import com.dunice.projectNews.models.tables.records.RequestLogsRecord;
import com.dunice.projectNews.models.tables.records.TagsRecord;
import com.dunice.projectNews.models.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * news_schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<NewsRecord> NEWS_PKEY = Internal.createUniqueKey(News.NEWS, DSL.name("news_pkey"), new TableField[] { News.NEWS.NEWS_ID }, true);
    public static final UniqueKey<RequestLogsRecord> REQUEST_LOGS_PKEY = Internal.createUniqueKey(RequestLogs.REQUEST_LOGS, DSL.name("request_logs_pkey"), new TableField[] { RequestLogs.REQUEST_LOGS.TIMESTAMP }, true);
    public static final UniqueKey<TagsRecord> TAGS_PKEY = Internal.createUniqueKey(Tags.TAGS, DSL.name("tags_pkey"), new TableField[] { Tags.TAGS.TAG_ID }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.USERS_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<NewsRecord, UsersRecord> NEWS__FK_NEWS_USERS = Internal.createForeignKey(News.NEWS, DSL.name("fk_news_users"), new TableField[] { News.NEWS.USERS_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.USERS_ID }, true);
    public static final ForeignKey<NewsTagsRecord, NewsRecord> NEWS_TAGS__FK_NEWS_TAGS_NEWS = Internal.createForeignKey(NewsTags.NEWS_TAGS, DSL.name("fk_news_tags_news"), new TableField[] { NewsTags.NEWS_TAGS.NEWS_ID }, Keys.NEWS_PKEY, new TableField[] { News.NEWS.NEWS_ID }, true);
    public static final ForeignKey<NewsTagsRecord, TagsRecord> NEWS_TAGS__FK_NEWS_TAGS_TAGS = Internal.createForeignKey(NewsTags.NEWS_TAGS, DSL.name("fk_news_tags_tags"), new TableField[] { NewsTags.NEWS_TAGS.TAG_ID }, Keys.TAGS_PKEY, new TableField[] { Tags.TAGS.TAG_ID }, true);
}
