/*
 * This file is generated by jOOQ.
 */
package com.dunice.projectNews.models.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID usersId;
    private final String avatar;
    private final String email;
    private final String name;
    private final String role;
    private final String password;

    public Users(Users value) {
        this.usersId = value.usersId;
        this.avatar = value.avatar;
        this.email = value.email;
        this.name = value.name;
        this.role = value.role;
        this.password = value.password;
    }

    public Users(
        UUID usersId,
        String avatar,
        String email,
        String name,
        String role,
        String password
    ) {
        this.usersId = usersId;
        this.avatar = avatar;
        this.email = email;
        this.name = name;
        this.role = role;
        this.password = password;
    }

    /**
     * Getter for <code>news_schema.users.users_id</code>.
     */
    public UUID getUsersId() {
        return this.usersId;
    }

    /**
     * Getter for <code>news_schema.users.avatar</code>.
     */
    public String getAvatar() {
        return this.avatar;
    }

    /**
     * Getter for <code>news_schema.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>news_schema.users.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>news_schema.users.role</code>.
     */
    public String getRole() {
        return this.role;
    }

    /**
     * Getter for <code>news_schema.users.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.usersId == null) {
            if (other.usersId != null)
                return false;
        }
        else if (!this.usersId.equals(other.usersId))
            return false;
        if (this.avatar == null) {
            if (other.avatar != null)
                return false;
        }
        else if (!this.avatar.equals(other.avatar))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.usersId == null) ? 0 : this.usersId.hashCode());
        result = prime * result + ((this.avatar == null) ? 0 : this.avatar.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(usersId);
        sb.append(", ").append(avatar);
        sb.append(", ").append(email);
        sb.append(", ").append(name);
        sb.append(", ").append(role);
        sb.append(", ").append(password);

        sb.append(")");
        return sb.toString();
    }
}
