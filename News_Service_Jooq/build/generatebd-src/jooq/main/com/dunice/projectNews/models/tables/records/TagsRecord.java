/*
 * This file is generated by jOOQ.
 */
package com.dunice.projectNews.models.tables.records;


import com.dunice.projectNews.models.tables.Tags;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagsRecord extends UpdatableRecordImpl<TagsRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>news_schema.tags.tag_id</code>.
     */
    public TagsRecord setTagId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.tags.tag_id</code>.
     */
    public Long getTagId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>news_schema.tags.title</code>.
     */
    public TagsRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>news_schema.tags.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Tags.TAGS.TAG_ID;
    }

    @Override
    public Field<String> field2() {
        return Tags.TAGS.TITLE;
    }

    @Override
    public Long component1() {
        return getTagId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public Long value1() {
        return getTagId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public TagsRecord value1(Long value) {
        setTagId(value);
        return this;
    }

    @Override
    public TagsRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public TagsRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagsRecord
     */
    public TagsRecord() {
        super(Tags.TAGS);
    }

    /**
     * Create a detached, initialised TagsRecord
     */
    public TagsRecord(Long tagId, String title) {
        super(Tags.TAGS);

        setTagId(tagId);
        setTitle(title);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TagsRecord
     */
    public TagsRecord(com.dunice.projectNews.models.tables.pojos.Tags value) {
        super(Tags.TAGS);

        if (value != null) {
            setTagId(value.getTagId());
            setTitle(value.getTitle());
            resetChangedOnNotNull();
        }
    }
}
